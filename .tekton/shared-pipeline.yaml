apiVersion: tekton.dev/v1
kind: Pipeline
metadata:
  name: shared-pipeline
# pipelineSpec in PipelineRun yamls
spec:
  finally:
  - name: show-sbom
    params:
    - name: IMAGE_URL
      value: $(tasks.build-container.results.IMAGE_URL)
    taskRef:
      params:
      - name: name
        value: show-sbom
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-show-sbom:0.1@sha256:bb6de6584cc47524ac69d2fb0bc310e546696b707e4052a465966e2446e33a15
      - name: kind
        value: task
      resolver: bundles
  - name: show-summary
    params:
    - name: pipelinerun-name
      value: $(context.pipelineRun.name)
    - name: git-url
      value: $(tasks.clone-repository.results.url)?rev=$(tasks.clone-repository.results.commit)
    - name: image-url
      value: $(params.output-image)
    - name: build-task-status
      value: $(tasks.build-container.status)
    taskRef:
      params:
      - name: name
        value: summary
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-summary:0.2@sha256:fc1b0a4efc83c91cd4a24020daabb874b3f33a87c34cd157cda0b7e6d4b7779a
      - name: kind
        value: task
      resolver: bundles
    workspaces:
    - name: workspace
      workspace: workspace
  params: 
  - description: Source Repository URL
    name: git-url
    type: string
  - default: ""
    description: Revision of the Source Repository
    name: revision
    type: string
  - description: Fully Qualified Output Image
    name: output-image
    type: string
  - default: .
    description: Path to the source code of an application's component from where to build image.
    name: path-context
    type: string
  - default: Dockerfile
    description: Path to the Dockerfile inside the context specified by parameter path-context
    name: dockerfile
    type: string
  - default: "false"
    description: Force rebuild image
    name: rebuild
    type: string
  - default: "false"
    description: Skip checks against built image
    name: skip-checks
    type: string
  - default: "false"
    description: Execute the build with network isolation
    name: hermetic
    type: string
  - default: ""
    description: Build dependencies to be prefetched by Cachi2
    name: prefetch-input
    type: string
  #- default: "false"
  #  description: Java build
  #  name: java
  #  type: string
  - default: ""
    description: Image tag expiration time, time values could be something like 1h, 2d, 3w for hours, days, and weeks, respectively.
    name: image-expires-after
  - default: "false"
    description: Build a source image.
    name: build-source-image
    type: string
  - default: []
    description: Array of --build-arg values ("arg=value" strings) for buildah
    name: build-args
    type: array
  - default: ""
    description: Path to a file with build arguments for buildah, see https://www.mankier.com/1/buildah-build#--build-arg-file
    name: build-args-file
    type: string
  results:
  - description: ""
    name: IMAGE_URL
    value: $(tasks.build-container.results.IMAGE_URL)
  - description: ""
    name: IMAGE_DIGEST
    value: $(tasks.build-container.results.IMAGE_DIGEST)
  - description: ""
    name: CHAINS-GIT_URL
    value: $(tasks.clone-repository.results.url)
  - description: ""
    name: CHAINS-GIT_COMMIT
    value: $(tasks.clone-repository.results.commit)
  #- description: ""
  #  name: JAVA_COMMUNITY_DEPENDENCIES
  #  value: $(tasks.build-container.results.JAVA_COMMUNITY_DEPENDENCIES)
  tasks:
  - name: init
    params:
    - name: image-url
      value: $(params.output-image)
    - name: rebuild
      value: $(params.rebuild)
    - name: skip-checks
      value: $(params.skip-checks)
    taskRef:
      params:
      - name: name
        value: init
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-init:0.2@sha256:83b7df553a736def52dd47bca2a3614c8fa2c88d112d691a4834289cf8c2abf5
      - name: kind
        value: task
      resolver: bundles
  - name: clone-repository # x86_64 (amd64)
    params:
      - name: url
        value: $(params.git-url)
      - name: revision
        value: $(params.revision)
      runAfter:
      - init
      taskRef:
        params:
        - name: name
          value: git-clone
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-git-clone:0.1@sha256:9ea6101d110d96dd95216ee5fb73213c394ee62280f2bf1d61bb460f56dac027
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: output
        workspace: workspace # x86_64
      - name: basic-auth
        workspace: git-auth
  # Additional clone-repositories here
  - name: prefetch-dependencies # x86_64
    params:
    - name: input
      value: $(params.prefetch-input)
    runAfter:
    - clone-repository # x86_64
    taskRef:
      params:
      - name: name
        value: prefetch-dependencies
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-prefetch-dependencies:0.1@sha256:c22f2537b73add9b9cef0c1ac92187abb8d265756eaa1e6e568a4f4215720cc3
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.prefetch-input)
      operator: notin
      values:
      - ""
    workspaces:
    - name: source
      workspace: workspace # x86_64
    - name: git-basic-auth
      workspace: git-auth
  # Additional prefetch-dependencies here
  - name: build-container # x86_64
    params:
      - name: IMAGE
        value: $(params.output-image) # x86_64
      - name: DOCKERFILE
        value: $(params.dockerfile)
      - name: CONTEXT
        value: $(params.path-context)
      - name: HERMETIC
        value: $(params.hermetic)
      - name: PREFETCH_INPUT
        value: $(params.prefetch-input)
      - name: IMAGE_EXPIRES_AFTER
        value: $(params.image-expires-after)
      - name: COMMIT_SHA
        value: $(tasks.clone-repository.results.commit) # $(tasks.clone-repository-x86_64.results.commit)
      - name: BUILD_ARGS
        value:
        - $(params.build-args[*])
      - name: BUILD_ARGS_FILE
        value: $(params.build-args-file)
      runAfter:
      - prefetch-dependencies # x86_64
      taskRef:
        params:
        - name: name
          value: buildah
        - name: bundle
          value: quay.io/konflux-ci/tekton-catalog/task-buildah:0.1@sha256:045cf147a1562de2ab5dd00301899d099c3d8c0fbaeba9406b7dd3605da3f4a0
        - name: kind
          value: task
        resolver: bundles
      when:
      - input: $(tasks.init.results.build)
        operator: in
        values:
        - "true"
      workspaces:
      - name: source
        workspace: workspace # x86_64
  # Additional build-containers here
  #- name: build-container # Unified container? manifest?
  #  params:
  #  - name: IMAGE
  #    value: $(params.output-image)
  #  - name: COMMIT_SHA
  #    value: $(tasks.clone-repository-x86_64.results.commit)
  #  - name: IMAGES
  #    value:
  #    - $(tasks.build-container-x86_64.results.IMAGE_URL)@$(tasks.build-container-x86_64.results.IMAGE_DIGEST)
  #    - $(tasks.build-container-s390x.results.IMAGE_URL)@$(tasks.build-container-s390x.results.IMAGE_DIGEST)
  #    - $(tasks.build-container-ppc64le.results.IMAGE_URL)@$(tasks.build-container-ppc64le.results.IMAGE_DIGEST)
  #  runAfter:
  #  - build-container-x86_64
  #  - build-container-s390x
  #  - build-container-ppc64le
  #  taskRef:
  #   params:
  #   - name: name
  #     value: build-image-manifest
  #   - name: bundle
        # https://quay.io/repository/konflux-ci/tekton-catalog/task-build-image-manifest
  #     value: quay.io/konflux-ci/tekton-catalog/task-build-image-manifest:0.1@sha256:fd0a0cf019621d6b577f1b9ab774bb1832f7cba61b4ceee2fd1bffc96895abf9
        # Was originally value: quay.io/redhat-appstudio-tekton-catalog/task-build-image-manifest:0.1@sha256:e064b63b2311d23d6bf6538347cb4eb18c980d61883f48149bc9c728f76b276c
  #   - name: kind
  #     value: task
  #   resolver: bundles
  #  when:
  #  - input: $(tasks.init.results.build)
  #    operator: in
  #    values:
  #    - "true"
  - name: build-source-image
    params:
    - name: BINARY_IMAGE
      value: $(params.output-image)
    - name: BASE_IMAGES
      value: $(tasks.build-container.results.BASE_IMAGES_DIGESTS)
    runAfter:
    - build-container
    taskRef:
      params:
      - name: name
        value: source-build
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-source-build:0.1@sha256:6e1815b51294e897474c2b09bea84cbb11ddbaf8028d7e10cf95a0181c565cc9
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(tasks.init.results.build)
      operator: in
      values:
      - "true"
    - input: $(params.build-source-image)
      operator: in
      values:
      - "true"
    workspaces:
    - name: workspace
      workspace: workspace # x86_64? Why? Try in basic one and see what breaks possibly  
  - name: depreciated-base-image-check # Run for each until multi-arch aware or have faith in our update scripts
    params:
    - name: BASE_IMAGES_DIGESTS
      value: $(tasks.build-container.results.BASE_IMAGES_DIGESTS) # x86_64? Multi arch has been fixed apparently
    - name: IMAGE_URL
      value: $(tasks.build-container.results.IMAGE_URL) # x86_64?
    - name: IMAGE_DIGEST
      value: $(tasks.build-container.results.IMAGE_DIGEST) # x86_64?
    runAfter:
    - build-container # Run after all so checks all
    taskRef:
      params:
      - name: name
        value: deprecated-image-check
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-deprecated-image-check:0.4@sha256:d70d970e689a26f1c9e6a1db69580a06cde989c7278c402316278d78c17d2927
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"    
  - name: clair-scan # Once again, will it check all images? Check slack #OK for multi-arch
    params:
    - name: image-digest
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-container.results.IMAGE_URL)
    runAfter:
    - build-container
    taskRef:
      params:
      - name: name
        value: clair-scan
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-clair-scan:0.1@sha256:f38e2740eceadac1dd3c131f093d6f87feecf31cfa9d3765fb3fa3a25ed804c8
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: ecosystem-cert-preflight-checks #multiarch unknown
    params:
    - name: image-url
      value: $(tasks.build-container.results.IMAGE_URL)
    runAfter:
    - build-container
    taskRef:
      params:
      - name: name
        value: ecosystem-cert-preflight-checks
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-ecosystem-cert-preflight-checks:0.1@sha256:8838d3e1628dbe61f4851b3640d2e3a9a3079d3ff3da955f4a3e4c2c95a013df
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: sast-snyk-check # I suppose only needed once on one repo
    runAfter:
    - clone-repository # x86_64
      taskRef:
      params:
      - name: name
        value: sast-snyk-check
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-sast-snyk-check:0.1@sha256:4c672aeda06ed1b9997a3c003153e1764c258195aa46a5f227ab521a81823a84
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
    workspaces:
    - name: workspace 
      workspace: workspace # x86_64, supposedly wherever the clone-repo ran
  - name: clamav-scan # multiarch unknown, supposedly supported
    params:
    - name: image-digest
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    - name: image-url
      value: $(tasks.build-container.results.IMAGE_URL)
    runAfter:
    - build-container
    taskRef:
      params:
      - name: name
        value: clamav-scan
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-clamav-scan:0.1@sha256:110ecfa4656ece3241336e434ded12aa4191a96ff1d0d6ca6deebba59be50f40
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: sbom-json-check # multiarch unknown, example only uses manifest image
    params:
    - name: IMAGE_URL
      value: $(tasks.build-container.results.IMAGE_URL)
    - name: IMAGE_DIGEST
      value: $(tasks.build-container.results.IMAGE_DIGEST)
    runAfter:
    - build-container
    taskRef:
      params:
      - name: name
        value: sbom-json-check
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-sbom-json-check:0.1@sha256:fe6e910cf25664dc6c192023f178a4066e20307d7f888f6d0fe0304c5c11a3c4
      - name: kind
        value: task
      resolver: bundles
    when:
    - input: $(params.skip-checks)
      operator: in
      values:
      - "false"
  - name: apply-tags # multiarch unknoen, will it apply tags to all or just manifest image?
    params:
    - name: IMAGE
      value: $(tasks.build-container.results.IMAGE_URL)
    # for later, additional Dev Spaces tags
    #- name: QUAY_TAG
    #  value: "latest"
    #- name: VERSION
    #  value: "3.15"
    #- name: IDENTIFIER
    #  value: "3.15-" + timestamp however we calculate that
    runAfter:
    - build-container
    taskRef:
      params:
      - name: name
        value: apply-tags
      - name: bundle
        value: quay.io/konflux-ci/tekton-catalog/task-apply-tags:0.1@sha256:175162b0a1c55e911d0d25ddef97e90932b5043f0b523cf83ed4824363840d74
      - name: kind
        value: task
      resolver: bundles
  workspaces:
  - name: workspace # (summary)
  - name: git-auth # (clone repos)
    optional: true
  #- name: workspace-x86_64
  #- name: workspace-ppc64le
  #- name: workspace-s390x



# Used workspaces:
# - workspace 
#   - show-summary
# - workspace-x86_64
#   - clone-repository-x86_64
#   - prefetch-dependencies-x86_64
#   - build-container-x86_64
# - workspace-ppc64le
# - workspace-s390x