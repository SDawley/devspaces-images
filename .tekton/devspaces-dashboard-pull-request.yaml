apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  annotations:
    build.appstudio.openshift.io/repo: https://github.com/SDawley/devspaces-images?rev={{revision}}
    build.appstudio.redhat.com/commit_sha: '{{revision}}'
    build.appstudio.redhat.com/pull_request_number: '{{pull_request_number}}'
    build.appstudio.redhat.com/target_branch: '{{target_branch}}'
    pipelinesascode.tekton.dev/max-keep-runs: "3"
    pipelinesascode.tekton.dev/on-cel-expression: event == "pull_request" && target_branch
      == "testKonflux" && ( "devspaces-dashboard/***".pathChanged() || ".tekton/devspaces-dashboard-pull-request.yaml".pathChanged()
      )
  creationTimestamp: null
  labels:
    appstudio.openshift.io/application: devspaces
    appstudio.openshift.io/component: devspaces-dashboard
    pipelines.appstudio.openshift.io/type: build
  name: devspaces-dashboard-on-pull-request
  namespace: sdawley-tenant
spec:
  params:
  - name: git-url
    value: '{{source_url}}'
  - name: revision
    value: '{{revision}}'
  # Does commenting this out mean it won't be pushed to quay
  - name: output-image
    value: quay.io/redhat-user-workloads/sdawley-tenant/devspaces/devspaces-dashboard:on-pr-{{revision}}
  - name: image-expires-after
    value: 5d
  - name: dockerfile
    value: build/dockerfiles/rhel.Dockerfile
  - name: path-context
    value: devspaces-dashboard
  #- name: hermetic
  #  value: "true"
  #- name: prefetch-input
  #  value: '{"type": "yarn", "path": "devspaces-dashboard"}'
  # Do I really need to set the default? Or can I do this:
  #- name: build-source-image
  #  value: "true"
  pipelineRef:
    name: shared-pipeline
  taskRunTemplate: {}
  workspaces:
  - name: workspace 
    volumeClaimTemplate:
      metadata:
        creationTimestamp: null
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
      status: {}
  #- name: workspace-x86_64
  #  volumeClaimTemplate:
  #    metadata:
  #      creationTimestamp: null
  #    spec:
  #      accessModes:
  #      - ReadWriteOnce
  #      resources:
  #        requests:
  #          storage: 1Gi
  #    status: {}
  - name: git-auth
    secret:
      secretName: '{{ git_auth_secret }}'
status: {}